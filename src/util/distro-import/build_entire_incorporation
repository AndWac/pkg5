#!/bin/ksh93
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
export PATH=../../../proto/root_$(uname -p)/usr/bin:$PATH
export PYTHONPATH=../../../proto/root_$(uname -p)/usr/lib/python2.4/vendor-packages
export PACKAGEPATH=../../../packages/i386

TMPFILE=$(mktemp ./temp_redistXXXXXX)
#
# This needs to be kept in sync with the redistributable version number.
#
REDIST_CLUSTER_VERSION=0.1

# Ensure that we catch any pipeline failures.
set -o pipefail
trap 'rm -fr $TMPFILE ./temp_image; print -u2 "$0: fatal error"; exit 1' ERR EXIT

if [[ -z $1 ]]; then
	print -u2 "usage: $0 <buildid>"
	exit 1
fi
if [[ -z $REPO ]]; then
	print -u2 "\$REPO must be set to a repository URL"
	exit 1
fi

buildid=$(echo $1 | tr -d '[a-z]')

# These are both hacky, horrible ways to get this information, but until there
# is a client API in place that can handle all repository types, it's necessary.
if [[ "$REPO" == http* ]]; then
        # create a temp image so we can get things from the repo
	pkg image-create -a opensolaris.org=$REPO ./temp_image > /dev/null || \
	    exit 1
	pkg -R ./temp_image contents -o action.raw -H -t depend -r \
	    redistributable@$REDIST_CLUSTER_VERSION-0.${buildid} | \
	    sed 's/type=require/type=incorporate/' > $TMPFILE || \
	    exit 1
	rm -r ./temp_image
elif [[ "$REPO" == file* ]]; then
	REPO_PATH=$(echo $REPO | sed 's@file://@@' || exit 1)
	MPATH=$REPO_PATH/pkg/redistributable
	MANIFEST=$(ls $MPATH/${REDIST_CLUSTER_VERSION}%2C*-0.${buildid}* | \
	    sort -r | head -1 || exit 1)
	cat $MANIFEST | grep '^depend' |
	    sed 's/type=require/type=incorporate/' > $TMPFILE || exit 1
else
	exit 1
fi

if [[ ! -s $TMPFILE ]]; then
	print -u2 "zero length redistributable incorporation!"
	exit 1
fi

#
# We use the unstripped build id here.
#
# Note also that we don't add a classification, as this package is an
# implementation artifact.
#
echo "set name=pkg.summary value=\"Build $1 entire incorporation\""
echo "set name=description value=\"Build $1 entire incorporation\""
echo "set name=pkg.description value=\"This package constrains" \
    "package versions to those for build $1.  WARNING: Proper" \
    "system update and correct package selection depend on the" \
    "presence of this incorporation.  Removing this package will" \
    "result in an unsupported system.\""
cat $TMPFILE
rm -f $TMPFILE
trap '' ERR EXIT
exit 0
