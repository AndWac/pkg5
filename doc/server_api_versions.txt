Version 5:
Compatible with clients using Versions 3-4.
    ConfigInterface.get_repo_attr_value() has changed as follows:
        * Section 'feed' attribute 'authority' has been removed.  It has been
          replaced by section 'publisher' attribute 'prefix'.

        * Section 'publisher' with attributes 'alias' and 'prefix' was added.

        * New attributes were added for section 'repository': 'collection_type',
          'legal_uris', 'mirrors', 'origins', 'refresh_seconds',
          'registration_uri', and 'related_uris'.  See the pydoc for
          pkg.server.api.ConfigInterface for details.

Version 4:
Compatible with clients using Version 3.

Changes:
    CatalogInterface.search() has changed as follows:
        * A docstring has been added; see pydoc pkg.server.api for details.

        * Added optional keyword 'matching_version' that allows consumers to
          filter search results based on version.

        * Added optional, boolean keyword 'return_latest' that causes only the
          the newest versions of packages to be returned when 'return_type'
          is Query.RETURN_PACKAGES.

Version 3:
Incompatible with clients using Versions 0-2.

Changes:
    CatalogInterface.search() has changed as follows:
        * Added optional, boolean keyword 'case_sensitive'.  This indicates
          whether a case-sensitive search should be performed.

        * Added optional keyword argument 'return_type'.  This determines
          whether results should be returned as Query.RETURN_ACTIONS or
          Query.RETURN_PACKAGES.

        * Added optional, integer keyword argument 'start_point'.  This
          specifies how many matching results should be skipped before
          returning anything.

        * Added optional, integer keyword argument 'num_to_return'.  This
          indicates how many results should be returned before the search
          is aborted.

        * search_done() was removed.  Previously, after calling search(), api
          consumers would have to call search_done().  This is no longer
          necessary.

Version 2:
Incompatible with clients using Versions 0-1.
Changes:
CatalogInterface.get_matching_version_fmris() no longer accepts the constraint
parameter.  However, as before, it expects a list of version strings for the
'versions' parameter.  These version strings may now contain the wildcard
characters '*' and '?'.

Version 1:
Incompatible with clients using Version 0.
Changes:
CatalogInterface.search_done() was added to perform cleanup after all results
have been retrieved from search().

CatalogInterface.search() now returns a generator object, instead of a list
object, that requires that CatalogInterface.search_done() is called after all
of the desired results have been retrieved for proper cleanup.

Version 0:
Initial api version, containing the following:
class BaseInterface
        -- used to instantiate other interface objects

class CatalogInterface
        def __init__(self, version_id, base):
        def fmris(self):
        def get_matching_pattern_fmris(self, patterns):
        def get_matching_version_fmris(self, versions,
            constraint=pkg.version.CONSTRAINT_AUTO):

        @property
        last_modified

        @property
        package_count

        def search(self, token):

        @property
        search_available

class ConfigInterface
        def __init__(self, version_id, base):

        @property
        catalog_requests

        @property
        content_root

        @property
        file_requests

        @property
        filelist_requests

        @property
        filelist_file_requests

        @property
        in_flight_transactions

        @property
        manifest_requests

        @property
        mirror

        @property
        readonly

        @property
        rename_requests

        @property
        web_root

        def get_repo_attrs(self):

        def get_repo_attr_value(self, section, attr):

class RequestInterface
        def __init__(self, version_id, base):

        def get_accepted_languages(self):

        def get_rel_path(self, uri):

        def log(self, msg):

        @property
        params

        @property
        path_info

        def url(self, path='', qs='', script_name=None, relative=None):

